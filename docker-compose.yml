version: '3.4'
services:
  nginx: 
    image: docker.io/nginx:1.14.1
    container_name: nginx
    restart: always
    volumes:
      - /home/docker/compose/nginx/logs:/var/log/nginx
      - /home/docker/compose/nginx/conf:/etc/nginx
      - /home/docker/compose/nginx/html:/usr/share/nginx/html
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 80:80
      - 443:443
  elasticsearch-master:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.0
    container_name: elasticsearch-master
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /home/docker/compose/elasticsearch/es1/data:/usr/shar/elasticsearch/data
      - /home/docker/compose/elasticsearch/es1/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 9200:9200
      - 9300:9300
  elasticsearch-slave:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.0
    container_name: elasticsearch-slave
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /home/docker/compose/elasticsearch/es2/data:/usr/shar/elasticsearch/data
      - /home/docker/compose/elasticsearch/es2/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 9201:9200
      - 9301:9300
    depends_on :
      - elasticsearch-master
  mysql:
    image: docker.io/mysql:5.7.21
    restart: always
    container_name: mysql
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /home/docker/compose/mysql/data:/var/lib/mysql
      - /home/docker/compose/mysql/conf:/etc/mysql
    ports:
      - 33006:3306
    command: [
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci',
        '--default-authentication-plugin=mysql_native_password'
    ]
    environment:
      MYSQL_ROOT_PASSWORD: 'yourpassword'
  gogs:
    image: gogs/gogs
    restart: always
    container_name: gogs
    depends_on: 
      - mysql
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /home/docker/compose/gogs/data:/data
    ports: 
      - "3000:3000"
      - "3022:22"
  redis-alone:
    image: redis:5.0.3
    container_name: redis-alone
    ports:
     - 6400:6379
    command: "--requirepass yourpassword --appendonly yes"
    volumes:
     - /home/docker/compose/redis-alone/data:/data
  redis-cluster:
    build:
      context: redis
      dockerfile: Dockerfile
    container_name: redis-cluster
    ports:
     - 7000:7000
     - 7002:7002
     - 7003:7003
     - 7004:7004
     - 7005:7005
     - 7010:7010
     - 17000:17000
     - 17001:17001
     - 17002:17002
     - 17003:17003
     - 17004:17004
     - 17005:17005
    volumes:
     - /home/docker/compose/redis/data:/redis/cluster/work_spac
    command: "/redis/cluster/build.sh"
  mongodb:
     build:
       context: mongo
       dockerfile: Dockerfile
     container_name: mongodb
     restart: always
     volumes:
      - /etc/localtime:/etc/localtime:ro
      - /home/docker/compose/mongo/work_spac:/home/mongodb/work_spac
     ports:
      - "27000:27000"
      - "27001:27001"
      - "27002:27002"
     command: "/home/mongodb/startup.sh"
  zoo1:
   image: registry.cn-hangzhou.aliyuncs.com/gy-team/zookeeper:3.4.13
   restart: always
   hostname: zoo1
   container_name: zoo1
   volumes:
    - /home/docker/compose/zookeeper/zoo1/data:/data
    - /home/docker/compose/zookeeper/zoo1/datalog:/datalog
    - /home/docker/compose/zookeeper/zoo1/conf:/conf
   ports:
     - 2181:2181
   environment:
     ZOO_MY_ID: 1
     ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
  zoo2:
   image: registry.cn-hangzhou.aliyuncs.com/gy-team/zookeeper:3.4.13
   restart: always
   hostname: zoo2
   container_name: zoo2
   volumes:
    - /home/docker/compose/zookeeper/zoo2/data:/data
    - /home/docker/compose/zookeeper/zoo2/datalog:/datalog
    - /home/docker/compose/zookeeper/zoo2/conf:/conf
   ports:
     - 2182:2181
   environment:
     ZOO_MY_ID: 2
     ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888
  zoo3:
   image: registry.cn-hangzhou.aliyuncs.com/gy-team/zookeeper:3.4.13
   restart: always
   hostname: zoo3
   container_name: zoo3
   volumes:
    - /home/docker/compose/zookeeper/zoo3/data:/data
    - /home/docker/compose/zookeeper/zoo3/datalog:/datalog
    - /home/docker/compose/zookeeper/zoo3/conf:/conf
   ports:
     - 2183:2181
   environment:
     ZOO_MY_ID: 3
     ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888
  kafka:
    container_name: kafka-alone
    image: wurstmeister/kafka
    volumes:
     - /etc/localtime:/etc/localtime
    ports:
     - "9092:9092"
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    environment:
      KAFKA_ADVERTISED_HOST_NAME: yourhosts
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2182,zoo3:2183
